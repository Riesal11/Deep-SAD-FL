# version: '3'

# include:
#   - docker-compose-distributor.yaml

services:
  server:
    container_name: deep-sad-fl-server
    build:
      context: .
      dockerfile: ./Dockerfile.server
    ports:
      - "8080:8080"
    tty: true
    # entrypoint:
    #   - ../docker-entrypoint-server.sh
  client_1:
    container_name: deep-sad-fl-client-1
    build:
      context: .
      dockerfile: ./Dockerfile.client
      args:
        SEED: 1
        PORT: 3000
    volumes:
      - ./data/2_client_setup/client_1:/app/data
    ports:
      - "3000:3000"
    tty: true
    # entrypoint:
    #   - ../docker-entrypoint-client.sh
  client_2:
    container_name: deep-sad-fl-client-2
    build:
      context: .
      dockerfile: ./Dockerfile.client
      args:
        SEED: 2
        PORT: 3001
    volumes:
      - ./data/2_client_setup/client_2:/app/data
    ports:
      - "3001:3001"
    tty: true
    # entrypoint:
    #   - ../docker-entrypoint-client.sh

  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: deep-sad-fl-zookeeper
    # to survive the container restart
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: deep-sad-fl-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      # optional - enable topic auto create
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data:/bitnami/kafka

  distributor:
    container_name: deep-sad-fl-distributor
    depends_on:
      - zookeeper
      - kafka
    build:
      context: .
      dockerfile: ./Dockerfile.distributor
    volumes:
      - ./data/2_client_setup/streams:/app/data
    ports:
      - "4000:4000"
    tty: true

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: deep-sad-fl-kafka-ui
    depends_on:
      - kafka

    ports:
      - "9000:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

volumes:
  kafka_data:
    driver: local